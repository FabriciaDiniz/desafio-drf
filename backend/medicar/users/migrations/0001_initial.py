# Generated by Django 3.0.4 on 2020-03-27 09:24

import django.contrib.auth.validators
from django.db import migrations, models
import medicar.users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'Já existe um usuário com esse username.'}, help_text='Obrigatório. 150 caracteres ou menos. Letras, dígitos e @/./+/-/_ apenas.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(error_messages={'unique': 'Já existe um usuário com esse email.'}, max_length=255, unique=True, verbose_name='email')),
                ('is_staff', models.BooleanField(default=False, help_text='Determina se o usuário pode logar no site de admin.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Determina se o usuário deve ser tratado como ativo. Desmarque essa opção invés de deletar usuários.', verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, help_text='Determina que esse usuário tem todas as permissões sem precisar declarar explicitamente.', verbose_name='superuser status')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', medicar.users.models.UserManager()),
            ],
        ),
    ]
